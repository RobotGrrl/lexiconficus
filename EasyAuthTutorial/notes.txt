following this tutorial:
https://scotch.io/tutorials/easy-node-authentication-setup-and-local

this is the application structure:
    - app
    ------ models
    ---------- user.js  <!-- our user model -->
    ------ routes.js    <!-- all the routes for our application -->
    - config
    ------ auth.js      <!-- will hold all our client secret keys (facebook, twitter, google) -->
    ------ database.js  <!-- will hold our database connection settings -->
    ------ passport.js  <!-- configuring the strategies for passport -->
    - views
    ------ index.ejs    <!-- show our home page with login links -->
    ------ login.ejs    <!-- show our login form -->
    ------ signup.ejs   <!-- show our signup form -->
    ------ profile.ejs  <!-- after a user logs in, they will see their profile -->
    - package.json      <!-- handle our npm packages -->
    - server.js         <!-- setup our application -->


packages.json has all of the packages we need. so it's easy to install them in this list, just:
npm install

server.js is going to be the glue of the entire app. the idea is to not edit this if it can be helped!

passport object is created at the beginning of the file, then is configured in config/passport.js. then it gets passed along to app/routes.js for using with the routes

routes are pages that it can go to, like home page or login / signup page

start the server:
node server.js

to auto refresh the server each time a file changes, use nodemon:
nodemon server.js

it sort of works but crashes immediately 

events.js:141
      throw er; // Unhandled 'error' event
      ^

config/database.js is where the info for the database goes. using modulus.io for a mongodb databse

